name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
#  build_wheels:
#    name: Build wheels on ubuntu-20.04
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      # Used to host cibuildwheel
#      - uses: actions/setup-python@v2
#
#      - name: Install cibuildwheel
#        run: python3 -m pip install cibuildwheel==2.0.0a2
#      - name: Build wheels
#        run: python3 -m cibuildwheel --output-dir wheelhouse
#        # to supply options, put them in 'env', like:
#        env:
#          CIBW_BEFORE_ALL: yum install -y  lapack-devel  blas-devel
#
#      - uses: actions/upload-artifact@v2
#        with:
#          path: ./wheelhouse/*.whl
  
  build_wheels_mac:
    name: Build wheels on mac
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==2.0.0a2
      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BEFORE_ALL: brew install openblas python
          CIBW_ARCHS_MACOS: x86_64 universal2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_wheels_win:
    name: Build wheels on Windows
    runs-on: windows-latest  # Use the latest Windows runner
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Checkout the repository

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Specify Python 3.11

    - name: Install CMake
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'  # Install CMake via Chocolatey

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip to the latest version
        python -m pip install wheel setuptools  # Install wheel and setuptools (necessary for building wheels)
        python -m pip install numpy==1.26.4  # Install numpy if your project requires it

    - name: Install OpenBLAS and LAPACK (via conda)
      run: |
        choco install miniconda3  # Install Miniconda for managing dependencies like OpenBLAS, LAPACK
        call C:\tools\Miniconda3\Scripts\activate.bat  # Activate Miniconda
        conda install -y -c conda-forge libblas liblapack openblas  # Install LAPACK, BLAS via conda

    - name: Set up C++ build tools (MSVC)
      run: |
        choco install visualcpp-build-tools  # Install the Visual C++ build tools via Chocolatey
        echo "::add-path::C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin" >> $GITHUB_PATH  # Add MSBuild to PATH

    - name: Install the package
      run: |
        pip install .  # Install the package using pip (this is equivalent to 'python setup.py install')
        # OR: python ./setup.py install  # Uncomment this line if you want to use 'setup.py install' instead of pip

    - name: Upload wheel artifact
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.whl  # Upload the built wheel to GitHub Actions artifacts

