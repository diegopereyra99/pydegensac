name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
#  build_wheels:
#    name: Build wheels on ubuntu-20.04
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      # Used to host cibuildwheel
#      - uses: actions/setup-python@v2
#
#      - name: Install cibuildwheel
#        run: python3 -m pip install cibuildwheel==2.0.0a2
#      - name: Build wheels
#        run: python3 -m cibuildwheel --output-dir wheelhouse
#        # to supply options, put them in 'env', like:
#        env:
#          CIBW_BEFORE_ALL: yum install -y  lapack-devel  blas-devel
#
#      - uses: actions/upload-artifact@v2
#        with:
#          path: ./wheelhouse/*.whl
  
  build_wheels_mac:
    name: Build wheels on mac
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==2.0.0a2
      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BEFORE_ALL: brew install openblas python
          CIBW_ARCHS_MACOS: x86_64 universal2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_wheels_win:
    name: Build wheels on Windows
    runs-on: windows-latest  # Use the latest Windows runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Checkout the repository

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Specify Python 3.11

    - name: Install CMake
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'  # Install CMake via Chocolatey

    - name: Install Miniconda
      run: |
        choco install miniconda3 --yes  # Install Miniconda
        echo "C:\\tools\\miniconda3" >> $GITHUB_PATH  # Add Miniconda to PATH

    - name: Install OpenBLAS and LAPACK
      shell: bash
      run: |
        source C:/tools/miniconda3/etc/profile.d/conda.sh  # Source Conda script
        conda init bash  # Initialize Conda
        conda create -n build-env -y python=3.11 blas=*=openblas lapack  # Create Conda environment
        conda activate build-env  # Activate the environment
        python -m pip install --upgrade pip  # Ensure pip is updated

    - name: Install Build Tools (MSVC)
      run: |
        choco install visualstudio2019buildtools --yes --ignore-checksums  # Install Visual Studio Build Tools
        echo "::add-path::C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin" >> $GITHUB_PATH  # Add MSBuild to PATH

    - name: Install Dependencies for Python Package
      run: |
        python -m pip install wheel setuptools  # Install wheel and setuptools
        python -m pip install numpy==1.26.4  # Install numpy if required by the project

    - name: Build the Package
      run: |
        python setup.py bdist_wheel  # Build the package into a wheel

    - name: Upload Wheel Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-wheels  # Name the artifact
        path: dist/*.whl  # Path to the built wheels
